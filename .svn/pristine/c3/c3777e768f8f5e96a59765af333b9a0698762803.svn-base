package com.fcgo.weixin.application.impl.order;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.fcgo.weixin.application.order.IOrdRefundRequestService;
import com.fcgo.weixin.common.constants.UserType;
import com.fcgo.weixin.common.dto.BaseSessionUserDTO;
import com.fcgo.weixin.common.dto.Page;
import com.fcgo.weixin.persist.dao.IOrderRefundRequestDAO;
import com.fcgo.weixin.persist.po.OrderRefundRequestPO;

@Service
public class OrdRefundRequestServiceImpl implements IOrdRefundRequestService {
    @Autowired
    private IOrderRefundRequestDAO orderRefundRequestDAO;

    @SuppressWarnings({"rawtypes", "unchecked"})
    @Override
    public Page findOrdRufundBypage(BaseSessionUserDTO baseSessionUserDTO, String refundStatus, int pageIndex) {
        Page page = new Page();
        // 更新当前页码
        if (pageIndex >= 1) {
            page.setPageIndex(pageIndex);
        }
        // 当订单售后状态为-1全部订单 清空售后订单状态
        if (StringUtils.isNotBlank(refundStatus) && refundStatus.equals("-1")) {
            refundStatus = null;
        }
        // 参数map
        Map parm = new HashMap();
        // 用户ID
        parm.put("userId", baseSessionUserDTO.getUserId());
        // 用户类型
        if (baseSessionUserDTO.getIsBuyer()) {
            // 买家
            parm.put("userType", UserType.BUYER.getKey());
        }
        else {
            // 卖家
            parm.put("userType", UserType.SELLER.getKey());
        }
        // 订单状态 （可空）
        parm.put("refundStatus", refundStatus);
        // 默认排序字段 方式（如果需要可更改）
        parm.put("sorter", "updateTime desc");
        // 分页信息
        parm.put("startPage", (page.getPageIndex() - 1) * page.getPageSize());
        parm.put("endPage", page.getPageIndex() * page.getPageSize());
        // 获取分页数据
        List<OrderRefundRequestPO> orderRefundRequestPOs = orderRefundRequestDAO.findOrdRefundByPage(parm);
        // 分页总数量
        int orderRefundCount = orderRefundRequestDAO.getCountBypage(parm);
        page.setRow(orderRefundRequestPOs);
        page.setRecords(orderRefundCount);
        return page;
    }

    @Override
    public OrderRefundRequestPO findById(int id) {
        return orderRefundRequestDAO.selectByPrimaryKey(id);
    }

}
