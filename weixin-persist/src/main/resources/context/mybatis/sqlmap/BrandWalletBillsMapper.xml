<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fcgo.weixin.persist.dao.BrandWalletBillsMapper">
  <resultMap id="BaseResultMap" type="com.fcgo.weixin.persist.model.BrandWalletBills">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="in_out" jdbcType="TINYINT" property="inOut" />
    <result column="order_code" jdbcType="VARCHAR" property="orderCode" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="biz_type" jdbcType="INTEGER" property="bizType" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, brand_id, in_out, order_code, amount, biz_type, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from brand_wallet_bills
    where id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.fcgo.weixin.persist.model.BrandWalletBills" useGeneratedKeys="true">
    insert into brand_wallet_bills (brand_id, in_out, order_code, 
      amount, biz_type, create_time
      )
    values (#{brandId,jdbcType=INTEGER}, #{inOut,jdbcType=TINYINT}, #{orderCode,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DECIMAL}, #{bizType,jdbcType=INTEGER}, #{createTime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.fcgo.weixin.persist.model.BrandWalletBills" useGeneratedKeys="true">
    insert into brand_wallet_bills
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="inOut != null">
        in_out,
      </if>
      <if test="orderCode != null">
        order_code,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="bizType != null">
        biz_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="inOut != null">
        #{inOut,jdbcType=TINYINT},
      </if>
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="bizType != null">
        #{bizType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fcgo.weixin.persist.model.BrandWalletBills">
    update brand_wallet_bills
    <set>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="inOut != null">
        in_out = #{inOut,jdbcType=TINYINT},
      </if>
      <if test="orderCode != null">
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="bizType != null">
        biz_type = #{bizType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fcgo.weixin.persist.model.BrandWalletBills">
    update brand_wallet_bills
    set brand_id = #{brandId,jdbcType=INTEGER},
      in_out = #{inOut,jdbcType=TINYINT},
      order_code = #{orderCode,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      biz_type = #{bizType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectCnt" resultType="int">
    select count(*) from brand_wallet_bills
    where 1=1 <include refid="where_select_all" />
  </select>

  <sql id="where_select_all">
    <if test="condition.brandId != null">
      and brand_id = #{condition.brandId,jdbcType=INTEGER}
    </if>
    <if test="condition.orderCode != null">
      and order_code = #{condition.orderCode,jdbcType=VARCHAR}
    </if>
    <if test="condition.inOut != null">
      and in_out = #{condition.inOut,jdbcType=TINYINT}
    </if>
  </sql>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from brand_wallet_bills
    where 1=1 <include refid="where_select_all" />
    order by id desc limit #{offset},#{limit}
  </select>
</mapper>