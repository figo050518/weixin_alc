<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fcgo.weixin.persist.dao.BrandAccountFlowMapper">
  <resultMap id="BaseResultMap" type="com.fcgo.weixin.persist.model.BrandAccountFlow">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="brand_account_id" jdbcType="INTEGER" property="brandAccountId" />
    <result column="flow_type" jdbcType="SMALLINT" property="flowType" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="order_code" jdbcType="BIGINT" property="orderCode" />
    <result column="amout" jdbcType="DOUBLE" property="amout" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, brand_account_id, flow_type, order_id, order_code, amout, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from brand_account_flow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from brand_account_flow
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.fcgo.weixin.persist.model.BrandAccountFlow" useGeneratedKeys="true">
    insert into brand_account_flow (brand_account_id, flow_type, order_id, 
      order_code, amout, create_time
      )
    values (#{brandAccountId,jdbcType=INTEGER}, #{flowType,jdbcType=SMALLINT}, #{orderId,jdbcType=INTEGER}, 
      #{orderCode,jdbcType=BIGINT}, #{amout,jdbcType=DOUBLE}, #{createTime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.fcgo.weixin.persist.model.BrandAccountFlow" useGeneratedKeys="true">
    insert into brand_account_flow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="brandAccountId != null">
        brand_account_id,
      </if>
      <if test="flowType != null">
        flow_type,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderCode != null">
        order_code,
      </if>
      <if test="amout != null">
        amout,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="brandAccountId != null">
        #{brandAccountId,jdbcType=INTEGER},
      </if>
      <if test="flowType != null">
        #{flowType,jdbcType=SMALLINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null">
        #{orderCode,jdbcType=BIGINT},
      </if>
      <if test="amout != null">
        #{amout,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fcgo.weixin.persist.model.BrandAccountFlow">
    update brand_account_flow
    <set>
      <if test="brandAccountId != null">
        brand_account_id = #{brandAccountId,jdbcType=INTEGER},
      </if>
      <if test="flowType != null">
        flow_type = #{flowType,jdbcType=SMALLINT},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null">
        order_code = #{orderCode,jdbcType=BIGINT},
      </if>
      <if test="amout != null">
        amout = #{amout,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fcgo.weixin.persist.model.BrandAccountFlow">
    update brand_account_flow
    set brand_account_id = #{brandAccountId,jdbcType=INTEGER},
      flow_type = #{flowType,jdbcType=SMALLINT},
      order_id = #{orderId,jdbcType=INTEGER},
      order_code = #{orderCode,jdbcType=BIGINT},
      amout = #{amout,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>